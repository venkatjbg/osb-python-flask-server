# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.maintenance_info import MaintenanceInfo
from swagger_server.models.service_instance_metadata import ServiceInstanceMetadata
from swagger_server import util


class ServiceInstanceResource(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, service_id: str=None, plan_id: str=None, dashboard_url: str=None, parameters: object=None, maintenance_info: MaintenanceInfo=None, metadata: ServiceInstanceMetadata=None):  # noqa: E501
        """ServiceInstanceResource - a model defined in Swagger

        :param service_id: The service_id of this ServiceInstanceResource.  # noqa: E501
        :type service_id: str
        :param plan_id: The plan_id of this ServiceInstanceResource.  # noqa: E501
        :type plan_id: str
        :param dashboard_url: The dashboard_url of this ServiceInstanceResource.  # noqa: E501
        :type dashboard_url: str
        :param parameters: The parameters of this ServiceInstanceResource.  # noqa: E501
        :type parameters: object
        :param maintenance_info: The maintenance_info of this ServiceInstanceResource.  # noqa: E501
        :type maintenance_info: MaintenanceInfo
        :param metadata: The metadata of this ServiceInstanceResource.  # noqa: E501
        :type metadata: ServiceInstanceMetadata
        """
        self.swagger_types = {
            'service_id': str,
            'plan_id': str,
            'dashboard_url': str,
            'parameters': object,
            'maintenance_info': MaintenanceInfo,
            'metadata': ServiceInstanceMetadata
        }

        self.attribute_map = {
            'service_id': 'service_id',
            'plan_id': 'plan_id',
            'dashboard_url': 'dashboard_url',
            'parameters': 'parameters',
            'maintenance_info': 'maintenance_info',
            'metadata': 'metadata'
        }

        self._service_id = service_id
        self._plan_id = plan_id
        self._dashboard_url = dashboard_url
        self._parameters = parameters
        self._maintenance_info = maintenance_info
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInstanceResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInstanceResource of this ServiceInstanceResource.  # noqa: E501
        :rtype: ServiceInstanceResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_id(self) -> str:
        """Gets the service_id of this ServiceInstanceResource.


        :return: The service_id of this ServiceInstanceResource.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id: str):
        """Sets the service_id of this ServiceInstanceResource.


        :param service_id: The service_id of this ServiceInstanceResource.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def plan_id(self) -> str:
        """Gets the plan_id of this ServiceInstanceResource.


        :return: The plan_id of this ServiceInstanceResource.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id: str):
        """Sets the plan_id of this ServiceInstanceResource.


        :param plan_id: The plan_id of this ServiceInstanceResource.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def dashboard_url(self) -> str:
        """Gets the dashboard_url of this ServiceInstanceResource.


        :return: The dashboard_url of this ServiceInstanceResource.
        :rtype: str
        """
        return self._dashboard_url

    @dashboard_url.setter
    def dashboard_url(self, dashboard_url: str):
        """Sets the dashboard_url of this ServiceInstanceResource.


        :param dashboard_url: The dashboard_url of this ServiceInstanceResource.
        :type dashboard_url: str
        """

        self._dashboard_url = dashboard_url

    @property
    def parameters(self) -> object:
        """Gets the parameters of this ServiceInstanceResource.


        :return: The parameters of this ServiceInstanceResource.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: object):
        """Sets the parameters of this ServiceInstanceResource.


        :param parameters: The parameters of this ServiceInstanceResource.
        :type parameters: object
        """

        self._parameters = parameters

    @property
    def maintenance_info(self) -> MaintenanceInfo:
        """Gets the maintenance_info of this ServiceInstanceResource.


        :return: The maintenance_info of this ServiceInstanceResource.
        :rtype: MaintenanceInfo
        """
        return self._maintenance_info

    @maintenance_info.setter
    def maintenance_info(self, maintenance_info: MaintenanceInfo):
        """Sets the maintenance_info of this ServiceInstanceResource.


        :param maintenance_info: The maintenance_info of this ServiceInstanceResource.
        :type maintenance_info: MaintenanceInfo
        """

        self._maintenance_info = maintenance_info

    @property
    def metadata(self) -> ServiceInstanceMetadata:
        """Gets the metadata of this ServiceInstanceResource.


        :return: The metadata of this ServiceInstanceResource.
        :rtype: ServiceInstanceMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: ServiceInstanceMetadata):
        """Sets the metadata of this ServiceInstanceResource.


        :param metadata: The metadata of this ServiceInstanceResource.
        :type metadata: ServiceInstanceMetadata
        """

        self._metadata = metadata
