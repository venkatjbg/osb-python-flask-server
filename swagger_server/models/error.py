# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Error(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, error: str=None, description: str=None, instance_usable: bool=None, update_repeatable: bool=None):  # noqa: E501
        """Error - a model defined in Swagger

        :param error: The error of this Error.  # noqa: E501
        :type error: str
        :param description: The description of this Error.  # noqa: E501
        :type description: str
        :param instance_usable: The instance_usable of this Error.  # noqa: E501
        :type instance_usable: bool
        :param update_repeatable: The update_repeatable of this Error.  # noqa: E501
        :type update_repeatable: bool
        """
        self.swagger_types = {
            'error': str,
            'description': str,
            'instance_usable': bool,
            'update_repeatable': bool
        }

        self.attribute_map = {
            'error': 'error',
            'description': 'description',
            'instance_usable': 'instance_usable',
            'update_repeatable': 'update_repeatable'
        }

        self._error = error
        self._description = description
        self._instance_usable = instance_usable
        self._update_repeatable = update_repeatable

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self) -> str:
        """Gets the error of this Error.


        :return: The error of this Error.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this Error.


        :param error: The error of this Error.
        :type error: str
        """

        self._error = error

    @property
    def description(self) -> str:
        """Gets the description of this Error.


        :return: The description of this Error.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Error.


        :param description: The description of this Error.
        :type description: str
        """

        self._description = description

    @property
    def instance_usable(self) -> bool:
        """Gets the instance_usable of this Error.


        :return: The instance_usable of this Error.
        :rtype: bool
        """
        return self._instance_usable

    @instance_usable.setter
    def instance_usable(self, instance_usable: bool):
        """Sets the instance_usable of this Error.


        :param instance_usable: The instance_usable of this Error.
        :type instance_usable: bool
        """

        self._instance_usable = instance_usable

    @property
    def update_repeatable(self) -> bool:
        """Gets the update_repeatable of this Error.


        :return: The update_repeatable of this Error.
        :rtype: bool
        """
        return self._update_repeatable

    @update_repeatable.setter
    def update_repeatable(self, update_repeatable: bool):
        """Sets the update_repeatable of this Error.


        :param update_repeatable: The update_repeatable of this Error.
        :type update_repeatable: bool
        """

        self._update_repeatable = update_repeatable
