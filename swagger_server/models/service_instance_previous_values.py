# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.maintenance_info import MaintenanceInfo
from swagger_server import util


class ServiceInstancePreviousValues(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, service_id: str=None, plan_id: str=None, maintenance_info: MaintenanceInfo=None):  # noqa: E501
        """ServiceInstancePreviousValues - a model defined in Swagger

        :param service_id: The service_id of this ServiceInstancePreviousValues.  # noqa: E501
        :type service_id: str
        :param plan_id: The plan_id of this ServiceInstancePreviousValues.  # noqa: E501
        :type plan_id: str
        :param maintenance_info: The maintenance_info of this ServiceInstancePreviousValues.  # noqa: E501
        :type maintenance_info: MaintenanceInfo
        """
        self.swagger_types = {
            'service_id': str,
            'plan_id': str,
            'maintenance_info': MaintenanceInfo
        }

        self.attribute_map = {
            'service_id': 'service_id',
            'plan_id': 'plan_id',
            'maintenance_info': 'maintenance_info'
        }

        self._service_id = service_id
        self._plan_id = plan_id
        self._maintenance_info = maintenance_info

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInstancePreviousValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInstancePreviousValues of this ServiceInstancePreviousValues.  # noqa: E501
        :rtype: ServiceInstancePreviousValues
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_id(self) -> str:
        """Gets the service_id of this ServiceInstancePreviousValues.


        :return: The service_id of this ServiceInstancePreviousValues.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id: str):
        """Sets the service_id of this ServiceInstancePreviousValues.


        :param service_id: The service_id of this ServiceInstancePreviousValues.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def plan_id(self) -> str:
        """Gets the plan_id of this ServiceInstancePreviousValues.


        :return: The plan_id of this ServiceInstancePreviousValues.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id: str):
        """Sets the plan_id of this ServiceInstancePreviousValues.


        :param plan_id: The plan_id of this ServiceInstancePreviousValues.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def maintenance_info(self) -> MaintenanceInfo:
        """Gets the maintenance_info of this ServiceInstancePreviousValues.


        :return: The maintenance_info of this ServiceInstancePreviousValues.
        :rtype: MaintenanceInfo
        """
        return self._maintenance_info

    @maintenance_info.setter
    def maintenance_info(self, maintenance_info: MaintenanceInfo):
        """Sets the maintenance_info of this ServiceInstancePreviousValues.


        :param maintenance_info: The maintenance_info of this ServiceInstancePreviousValues.
        :type maintenance_info: MaintenanceInfo
        """

        self._maintenance_info = maintenance_info
